{"ast":null,"code":"import { GET_RANDOM, GET_NAME, GET_RANDOM_QUOTE, GET_QUOTE, GET_RANDOM_DEAD } from './constants';\nconst initialState = {\n  name: '',\n  ocupation: '',\n  status: '',\n  alias: '',\n  img: '',\n  author: '',\n  quote: '',\n  death: '',\n  cause: '',\n  responsible: '',\n  last_words: '',\n  season: ''\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_RANDOM:\n      {\n        return { ...state,\n          name: action.payload[0].name,\n          alias: action.payload[0].nickname,\n          status: action.payload[0].status,\n          img: action.payload[0].img,\n          ocupation: action.payload[0].occupation[0]\n        };\n      }\n\n    case GET_NAME:\n      {\n        return { ...state,\n          name: action.payload[0].name,\n          alias: action.payload[0].nickname,\n          status: action.payload[0].status,\n          img: action.payload[0].img,\n          ocupation: action.payload[0].occupation[0]\n        };\n      }\n\n    case GET_RANDOM_QUOTE:\n      {\n        return { ...state,\n          author: action.payload[0].author,\n          quote: action.payload[0].quote\n        };\n      }\n\n    case GET_QUOTE:\n      {\n        return { ...state,\n          author: action.payload[0].author,\n          quote: action.payload[0].quote\n        };\n      }\n\n    case GET_RANDOM_DEAD:\n      {\n        return { ...state,\n          death: action.payload[0].death,\n          cause: action.payload[0].cause,\n          img: action.payload[0].img\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/Blas y Dora/Desktop/Programacion/bb/breakingbad/src/redux/reducer.js"],"names":["GET_RANDOM","GET_NAME","GET_RANDOM_QUOTE","GET_QUOTE","GET_RANDOM_DEAD","initialState","name","ocupation","status","alias","img","author","quote","death","cause","responsible","last_words","season","rootReducer","state","action","type","payload","nickname","occupation"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,QAArB,EAA+BC,gBAA/B,EAAiDC,SAAjD,EAA4DC,eAA5D,QAAoF,aAApF;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,SAAS,EAAC,EAFO;AAGjBC,EAAAA,MAAM,EAAE,EAHS;AAIjBC,EAAAA,KAAK,EAAE,EAJU;AAKjBC,EAAAA,GAAG,EAAE,EALY;AAMjBC,EAAAA,MAAM,EAAC,EANU;AAOjBC,EAAAA,KAAK,EAAC,EAPW;AAQjBC,EAAAA,KAAK,EAAC,EARW;AASjBC,EAAAA,KAAK,EAAC,EATW;AAUjBC,EAAAA,WAAW,EAAE,EAVI;AAWjBC,EAAAA,UAAU,EAAC,EAXM;AAYjBC,EAAAA,MAAM,EAAC;AAZU,CAArB;;AAiBA,SAASC,WAAT,CAAqBC,KAAK,GAAGd,YAA7B,EAA2Ce,MAA3C,EAAmD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,UAAL;AAAiB;AACb,eAAO,EACH,GAAGmB,KADA;AAEHb,UAAAA,IAAI,EAAEc,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBhB,IAFrB;AAGHG,UAAAA,KAAK,EAAEW,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBC,QAHtB;AAIHf,UAAAA,MAAM,EAAEY,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBd,MAJvB;AAKHE,UAAAA,GAAG,EAAEU,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBZ,GALpB;AAMHH,UAAAA,SAAS,EAAEa,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBE,UAAlB,CAA6B,CAA7B;AANR,SAAP;AAQH;;AACD,SAAKvB,QAAL;AAAe;AACX,eAAO,EACH,GAAGkB,KADA;AAEHb,UAAAA,IAAI,EAAEc,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBhB,IAFrB;AAGHG,UAAAA,KAAK,EAAEW,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBC,QAHtB;AAIHf,UAAAA,MAAM,EAAEY,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBd,MAJvB;AAKHE,UAAAA,GAAG,EAAEU,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBZ,GALpB;AAMHH,UAAAA,SAAS,EAAEa,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBE,UAAlB,CAA6B,CAA7B;AANR,SAAP;AASH;;AACD,SAAKtB,gBAAL;AAAuB;AACnB,eAAO,EACH,GAAGiB,KADA;AAEHR,UAAAA,MAAM,EAAES,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBX,MAFvB;AAGHC,UAAAA,KAAK,EAAEQ,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBV;AAHtB,SAAP;AAKH;;AACD,SAAKT,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGgB,KADA;AAEHR,UAAAA,MAAM,EAAES,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBX,MAFvB;AAGHC,UAAAA,KAAK,EAAEQ,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBV;AAHtB,SAAP;AAKH;;AACD,SAAKR,eAAL;AAAsB;AAClB,eAAO,EACH,GAAGe,KADA;AAEHN,UAAAA,KAAK,EAAEO,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBT,KAFtB;AAGHC,UAAAA,KAAK,EAAEM,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBR,KAHtB;AAIHJ,UAAAA,GAAG,EAAEU,MAAM,CAACE,OAAP,CAAe,CAAf,EAAkBZ;AAJpB,SAAP;AAMH;;AAID;AACI,aAAOS,KAAP;AAhDR;AAkDH;;AACD,eAAeD,WAAf","sourcesContent":["import { GET_RANDOM, GET_NAME, GET_RANDOM_QUOTE, GET_QUOTE, GET_RANDOM_DEAD  } from './constants'\r\nconst initialState = {\r\n    name: '',\r\n    ocupation:'',\r\n    status: '',\r\n    alias: '',\r\n    img: '',\r\n    author:'',\r\n    quote:'',\r\n    death:'',\r\n    cause:'',\r\n    responsible: '',\r\n    last_words:'',\r\n    season:''\r\n\r\n\r\n}\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_RANDOM: {\r\n            return {\r\n                ...state,\r\n                name: action.payload[0].name,\r\n                alias: action.payload[0].nickname,\r\n                status: action.payload[0].status,\r\n                img: action.payload[0].img,\r\n                ocupation: action.payload[0].occupation[0]\r\n            }\r\n        }\r\n        case GET_NAME: {\r\n            return {\r\n                ...state,\r\n                name: action.payload[0].name,\r\n                alias: action.payload[0].nickname,\r\n                status: action.payload[0].status,\r\n                img: action.payload[0].img,\r\n                ocupation: action.payload[0].occupation[0]\r\n\r\n            }\r\n        }\r\n        case GET_RANDOM_QUOTE: {\r\n            return {\r\n                ...state,\r\n                author: action.payload[0].author,\r\n                quote: action.payload[0].quote\r\n            }\r\n        }\r\n        case GET_QUOTE: {\r\n            return {\r\n                ...state,\r\n                author: action.payload[0].author,\r\n                quote: action.payload[0].quote\r\n            }\r\n        }\r\n        case GET_RANDOM_DEAD: {\r\n            return {\r\n                ...state,\r\n                death: action.payload[0].death,\r\n                cause: action.payload[0].cause,\r\n                img: action.payload[0].img\r\n            }\r\n        }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default rootReducer"]},"metadata":{},"sourceType":"module"}